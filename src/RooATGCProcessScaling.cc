/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "HiggsAnalysis/CombinedLimit/interface/RooATGCProcessScaling.h" 
#include <math.h> 
#include "TMath.h" 

#include "TFile.h"

ClassImpUnique(RooATGCProcessScaling,MAGICWORDOFSOMESORT) 

RooATGCProcessScaling::RooATGCProcessScaling() { }

RooATGCProcessScaling::RooATGCProcessScaling(const char *name, 
					     const char *title, 
					     RooAbsReal& dkg,
					     RooAbsReal& lZ,
					     RooAbsReal& dg1,
					     RooAbsReal& shapeScale) :
   RooAbsReal(name,title),
   _shapeScale("shapeScale","shapeScale",this,shapeScale) {  
  // must make sure that before this TGCs are at the SM value
  RooAbsReal* sm_int = shapeScale.createIntegral(RooArgSet(),RooArgSet());
  SM_scale = sm_int->getVal();
  delete sm_int;  
} 

RooATGCProcessScaling::
RooATGCProcessScaling(const RooATGCProcessScaling& other, 
		      const char* name) :  
  RooAbsReal(other,name),
  _shapeScale("shapeScale",this,other._shapeScale),
  SM_scale(other.SM_scale)
{ } 

RooATGCProcessScaling::~RooATGCProcessScaling() {  
}

Double_t RooATGCProcessScaling::evaluate() const { 
  // initialize the integral of the shape  
  RooAbsReal* integral = _shapeScale.arg().createIntegral(RooArgSet(),
							  RooArgSet()); 
  double intval =integral->getVal();
  delete integral;
  return intval/SM_scale;
}
